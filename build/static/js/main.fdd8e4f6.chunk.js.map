{"version":3,"sources":["shared/utils.tsx","features/workflow/types.tsx","App.tsx","features/workflow/action.tsx","features/workflow/reducer.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["splitRegex","CommonUtils","states","workflows","syllableSplitter","word","replace","e","toLocaleLowerCase","split","map","filter","length","reduce","a","b","i","arr","vowelsOnly","Set","push","has","DrawerUtils","ctx","width","height","horizontalBaseSpan","g","m","f","s","p","k","j","r","z","d","h","n","l","w","t","glottal","c","R","y","col","cols","row","x","GRAPH_HALF_WIDTH","GRAPH_HALF_HEIGHT","MARGIN_TOP","beginPath","moveTo","lineTo","lineWidth","GRAPH_STROKE_WIDTH","stroke","roundedMiddle","right","verticalBase","baseX","baseY","curveHeight","GRAPH_CURVE_HEIGHT","startX","startY","clearRect","xOff","curveStartX","bezierCurveTo","roundedBottom","roundedTop","roundedDouble","roundedInverted","curveStartY","pointyMiddle","pointyEnd","pointyBottom","pointyTop","pointyDouble","roundedMiddleUpDown","upside","horizontalBase","GRAPH_CURVE_WIDTH","curveEndX","curveEndY","pointYMiddleUpDown","curveHalfWidth","pointStartX","pointStartY","pointMiddleX","pointMiddleY","pointEndX","pointEndY","curveWidth","curve","offset","pointSecondMiddleX","pointSecondMiddleY","DRAWER","o","u","WorkflowActions","FormDetails","props","Form","useForm","form","useEffect","setFieldsValue","text","layout","onValuesChange","_","v","dispatch","type","SetTextValue","payload","Item","label","name","placeholder","Canvas","ref","useRef","current","context","getContext","strokeStyle","words","syllables","syllable","consonant","slice","verticalDrawer","vowel","horizontalDrawer","previousLength","currentLength","diff","lastRow","style","library","add","faCheckSquare","faCoffee","faChalkboard","faNetworkWired","faQuestion","faBook","faExclamation","faKeyboard","faPlus","faCheckCircle","faTimesCircle","faPuzzlePiece","App","canvasRef","this","className","icon","span","level","bordered","dataSource","renderItem","item","endsWith","React","Component","connect","mapStatesToProps","initialState","store","configureStore","reducer","state","action","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fdd8e4f6.chunk.js","sourcesContent":["import { WorkflowState } from \"../features/workflow/reducer\";\n\nconst splitRegex = /([aeiou]|R[aeiou]?|\\?[aeiou]?|[^aeiou][aeiou]?)(!?)/g\n\nexport default class CommonUtils {\n  static mapStatesToProps(states: {[a:string]:any}) {\n    return {\n      workflows: states.workflows as WorkflowState\n    }\n  }\n\n  static readonly syllableSplitter = (word: string) => word.replace(/[^a-z?! ]gi/, '')\n  .replace(/[^r]/gi, function(e){return e.toLocaleLowerCase(\"en-gb\")})\n  .split(' ')\n  .map(e => e\n    .split(splitRegex)\n    .filter(e => e.length)\n    .reduce((a, b, i, arr) => {\n      const vowelsOnly = new Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n      if (b === \"!\") return a;\n      if (arr[i + 1] === \"!\") {\n        a.push(vowelsOnly.has(b) ? (\"?\" + b + \"!\") : (b + \"!\"))\n      }\n      else a.push(vowelsOnly.has(b)? (\"?\" + b) : b)\n      return a\n    }, [] as string[])\n  )\n}\n\nexport type DefaultProps = {\n  workflows: WorkflowState\n  dispatch: (a: any) => void\n}\n\nexport class DrawerUtils {\n  static readonly GRAPH_HALF_WIDTH = 48;\n  static readonly GRAPH_HALF_HEIGHT = 35;\n  static readonly GRAPH_STROKE_WIDTH = 3;\n  static readonly GRAPH_CURVE_HEIGHT = 12;\n  static readonly GRAPH_CURVE_WIDTH = 24;\n  static readonly MARGIN_TOP = 12;\n\n  static readonly DRAWER: {[letter:string]:(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) => void} = {\n    \"b\": DrawerUtils.b,\n    \"g\": DrawerUtils.g,\n    \"m\": DrawerUtils.m,\n    \"f\": DrawerUtils.f,\n    \"s\": DrawerUtils.s,\n    \"p\": DrawerUtils.p,\n    \"k\": DrawerUtils.k,\n    \"j\": DrawerUtils.j,\n    \"r\": DrawerUtils.r,\n    \"z\": DrawerUtils.z,\n    \"d\": DrawerUtils.d,\n    \"h\": DrawerUtils.h,\n    \"n\": DrawerUtils.n,\n    \"l\": DrawerUtils.l,\n    \"w\": DrawerUtils.w,\n    \"t\": DrawerUtils.t,\n    \"?\": DrawerUtils.glottal,\n    \"c\": DrawerUtils.c,\n    \"R\": DrawerUtils.R,\n    \"y\": DrawerUtils.y,\n    \"a\": DrawerUtils.a,\n    \"o\": DrawerUtils.o,\n    \"e!\": DrawerUtils[\"e!\"],\n    \"u\": DrawerUtils.u,\n    \"e\": DrawerUtils.e,\n    \"i\": DrawerUtils.i,\n  }\n  static debugDraw(ctx: CanvasRenderingContext2D, width: number, height: number) {\n    DrawerUtils.horizontalBaseSpan(ctx, 5, 0, width)\n    DrawerUtils.b(ctx, 0, 5, 0, width)\n    DrawerUtils.g(ctx, 1, 5, 0, width)\n    DrawerUtils.m(ctx, 2, 5, 0, width)\n    DrawerUtils.f(ctx, 3, 5, 0, width)\n    DrawerUtils.s(ctx, 4, 5, 0, width)\n    DrawerUtils.horizontalBaseSpan(ctx, 5, 1, width)\n    DrawerUtils.p(ctx, 0, 5, 1, width)\n    DrawerUtils.k(ctx, 1, 5, 1, width)\n    DrawerUtils.j(ctx, 2, 5, 1, width)\n    DrawerUtils.r(ctx, 3, 5, 1, width)\n    DrawerUtils.z(ctx, 4, 5, 1, width)\n    DrawerUtils.horizontalBaseSpan(ctx, 5, 2, width)\n    DrawerUtils.d(ctx, 0, 5, 2, width)\n    DrawerUtils.h(ctx, 1, 5, 2, width)\n    DrawerUtils.n(ctx, 2, 5, 2, width)\n    DrawerUtils.l(ctx, 3, 5, 2, width)\n    DrawerUtils.w(ctx, 4, 5, 2, width)\n    DrawerUtils.horizontalBaseSpan(ctx, 5, 3, width)\n    DrawerUtils.t(ctx, 0, 5, 3, width)\n    DrawerUtils.glottal(ctx, 1, 5, 3, width)\n    DrawerUtils.c(ctx, 2, 5, 3, width)\n    DrawerUtils.R(ctx, 3, 5, 3, width)\n    DrawerUtils.y(ctx, 4, 5, 3, width)\n    DrawerUtils.horizontalBaseSpan(ctx, 5, 4, width)\n  }\n\n  static verticalBase(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    const x = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const y = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    ctx.beginPath()\n    ctx.moveTo(x, y)\n    ctx.lineTo(x, y + 2 * DrawerUtils.GRAPH_HALF_HEIGHT)\n    ctx.lineWidth = DrawerUtils.GRAPH_STROKE_WIDTH\n    ctx.stroke()\n  }\n\n  static horizontalBase(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    const x = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const y = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    ctx.beginPath()\n    ctx.moveTo(x, y)\n    ctx.lineTo(x + 2 * DrawerUtils.GRAPH_HALF_WIDTH, y)\n    ctx.lineWidth = DrawerUtils.GRAPH_STROKE_WIDTH\n    ctx.stroke()\n  }\n\n  static horizontalBaseSpan(ctx: CanvasRenderingContext2D, cols: number, row: number, width: number) {\n    const x = width / 2 - cols * DrawerUtils.GRAPH_HALF_WIDTH;\n    const y = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    ctx.beginPath()\n    ctx.moveTo(x, y)\n    ctx.lineTo(x + 2 * cols * DrawerUtils.GRAPH_HALF_WIDTH + 1, y)\n    ctx.lineWidth = DrawerUtils.GRAPH_STROKE_WIDTH\n    ctx.stroke()\n  }\n\n  static b(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedMiddle(ctx, col, cols, row, width, true)\n  }\n\n  static d(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedMiddle(ctx, col, cols, row, width, false)\n  }\n\n  static roundedMiddle(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - curveHeight / 2\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      curveHeight\n    )\n    const xOff = 2\n    const curveStartX = startX + xOff\n    ctx.beginPath();\n    ctx.moveTo(right ? curveStartX : (curveStartX + 1), startY);\n    ctx.bezierCurveTo((right ? 21 : -21) + curveStartX, -18 + startY, (right ? 17 : -17) + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n    ctx.stroke();\n  }\n\n  static g(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedBottom(ctx, col, cols, row, width, true)\n  }\n\n  static h(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedBottom(ctx, col, cols, row, width, false)\n  }\n\n  static roundedBottom(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + 2 * DrawerUtils.GRAPH_HALF_HEIGHT - DrawerUtils.GRAPH_CURVE_HEIGHT - 2\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      DrawerUtils.GRAPH_CURVE_HEIGHT\n    )\n    const xOff = 2\n    const curveStartX = startX + xOff\n    ctx.beginPath();\n    ctx.moveTo(right ? curveStartX : (curveStartX + 1), startY);\n    ctx.bezierCurveTo((right ? 21 : -21) + curveStartX, -18 + startY, (right ? 17 : -17) + curveStartX, 21 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n    ctx.stroke();\n  }\n\n  static m(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedTop(ctx, col, cols, row, width, true)\n  }\n\n  static n(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedTop(ctx, col, cols, row, width, false)\n  }\n\n  static roundedTop(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + 2\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      DrawerUtils.GRAPH_CURVE_HEIGHT\n    )\n    const xOff = 2\n    const curveStartX = startX + xOff\n    ctx.beginPath();\n    ctx.moveTo(right ? curveStartX : (curveStartX + 1), startY - 2);\n    ctx.bezierCurveTo((right ? 21 : -21) + curveStartX, -2 + startY, (right ? 17 : -17) + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n    ctx.stroke();\n  }\n\n  static f(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedDouble(ctx, col, cols, row, width, true)\n  }\n\n  static l(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedDouble(ctx, col, cols, row, width, false)\n  }\n\n  static roundedDouble(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH \n    {\n      const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT / 2 - curveHeight / 2 + 2\n      ctx.clearRect(\n        startX,\n        startY,\n        2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n        curveHeight\n      )\n      const xOff = 2\n      const curveStartX = startX + xOff\n      ctx.beginPath();\n      ctx.moveTo(right ? curveStartX : (curveStartX + 1), startY);\n      ctx.bezierCurveTo((right ? 21 : -21) + curveStartX, -18 + startY, (right ? 17 : -17) + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n      ctx.stroke();\n    }\n\n    {\n      const startY = baseY + 3 * DrawerUtils.GRAPH_HALF_HEIGHT / 2 - curveHeight / 2 - 2\n      ctx.clearRect(\n        startX,\n        startY,\n        2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n        curveHeight\n      )\n      const xOff = 2\n      const curveStartX = startX + xOff\n      ctx.beginPath();\n      ctx.moveTo(right ? curveStartX : (curveStartX + 1), startY);\n      ctx.bezierCurveTo((right ? 21 : -21) + curveStartX, -18 + startY, (right ? 17 : -17) + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n      ctx.stroke();\n    }\n  }\n\n  static s(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH \n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT / 2\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      2.5 * curveHeight\n    )\n    {\n      const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH \n      const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT / 2\n      const xOff = 2\n      const curveStartX = startX + xOff\n      ctx.beginPath();\n      ctx.moveTo(curveStartX, startY + 1);\n      ctx.bezierCurveTo(21 + curveStartX, -18 + startY, 17 + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n    }\n\n    {\n      const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH + 2\n      const startY = baseY + 3 * DrawerUtils.GRAPH_HALF_HEIGHT / 2 - curveHeight * 1.6\n      const xOff = 2\n      const curveStartX = startX + xOff\n      ctx.bezierCurveTo(-21 + curveStartX, -18 + startY, -17 + curveStartX, 29 + startY, curveStartX, DrawerUtils.GRAPH_CURVE_HEIGHT + startY + 1);\n      ctx.stroke();\n    }\n  }\n\n  static w(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedInverted(ctx, col, cols, row, width, true)\n  }\n\n  static y(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedInverted(ctx, col, cols, row, width, false)\n  }\n\n  static roundedInverted(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 2.5;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - curveHeight / 2\n\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      curveHeight\n    )\n\n    ctx.beginPath();\n    if (right) {\n      ctx.moveTo(startX + 2, startY)\n      ctx.lineTo(startX + 2 + curveHeight * 0.5, startY)\n    } else {\n      ctx.moveTo(startX + 3, startY)\n      ctx.lineTo(startX + 3 - curveHeight * 0.5, startY)\n    }\n\n    if (right) {\n      ctx.moveTo(startX + 2, startY + curveHeight)\n      ctx.lineTo(startX + 2 + curveHeight * 0.5, startY + curveHeight)\n    } else {\n      ctx.moveTo(startX + 3, startY + curveHeight)\n      ctx.lineTo(startX + 3 - curveHeight * 0.5, startY + curveHeight)\n    }\n\n    if (right) {\n      const curveStartX = startX + 2 + curveHeight * 0.5\n      const curveStartY = startY\n      ctx.moveTo(curveStartX, curveStartY)\n      ctx.bezierCurveTo(curveStartX - curveHeight * 0.5, curveStartY, curveStartX - curveHeight * 0.5, curveStartY + curveHeight, startX + 2 + curveHeight * 0.5, startY + curveHeight)\n    } else {\n      const curveStartX = startX + 3 - curveHeight * 0.5\n      const curveStartY = startY\n      ctx.moveTo(curveStartX, curveStartY)\n      ctx.bezierCurveTo(curveStartX + curveHeight * 0.5, curveStartY, curveStartX + curveHeight * 0.5, curveStartY + curveHeight, startX + 3 - curveHeight * 0.5, startY + curveHeight)\n    }\n    ctx.stroke();\n  }\n\n  static p(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyMiddle(ctx, col, cols, row, width, true)\n  }\n\n  static t(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyMiddle(ctx, col, cols, row, width, false)\n  }\n\n  static pointyMiddle(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 1.75;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - curveHeight / 2\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      curveHeight\n    )\n    const pointyEnd = right ? (startX + curveHeight * 0.75) : (startX - curveHeight * 0.75)\n    ctx.beginPath()\n    ctx.moveTo(startX + 3, startY)\n    ctx.lineTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.moveTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.lineTo(startX + 3, startY + curveHeight + 1)\n    ctx.stroke()\n  }\n\n  static k(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyBottom(ctx, col, cols, row, width, true)\n  }\n\n  static glottal(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyBottom(ctx, col, cols, row, width, false)\n  }\n\n  static pointyBottom(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 1.75;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT + 0.65 * curveHeight - 3\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      curveHeight\n    )\n    const pointyEnd = right ? (startX + curveHeight * 0.75) : (startX - curveHeight * 0.75)\n    ctx.beginPath()\n    ctx.moveTo(startX + 3, startY)\n    ctx.lineTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.moveTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.lineTo(startX + 3, startY + curveHeight + 1)\n    ctx.stroke()\n  }\n\n  static j(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyTop(ctx, col, cols, row, width, true)\n  }\n\n  static c(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyTop(ctx, col, cols, row, width, false)\n  }\n\n  static pointyTop(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 1.75;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - 1.65 * curveHeight + 3\n    ctx.clearRect(\n      startX,\n      startY,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      curveHeight\n    )\n    const pointyEnd = right ? (startX + curveHeight * 0.75) : (startX - curveHeight * 0.75)\n    ctx.beginPath()\n    ctx.moveTo(startX + 3, startY)\n    ctx.lineTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.moveTo(pointyEnd, startY + curveHeight / 2 + 1)\n    ctx.lineTo(startX + 3, startY + curveHeight + 1)\n    ctx.stroke()\n  }\n\n  static r(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyDouble(ctx, col, cols, row, width, true)\n  }\n\n  static R(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointyDouble(ctx, col, cols, row, width, false)\n  }\n\n  static pointyDouble(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, right = true) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 1.75;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    {\n      const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - 1.25 * curveHeight + 3\n      ctx.clearRect(\n        startX,\n        startY,\n        2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n        curveHeight\n      )\n      const pointyEnd = right ? (startX + curveHeight * 0.75) : (startX - curveHeight * 0.75)\n      ctx.beginPath()\n      ctx.moveTo(startX + 3, startY)\n      ctx.lineTo(pointyEnd, startY + curveHeight / 2 + 1)\n      ctx.stroke()\n  \n      ctx.beginPath()\n      ctx.moveTo(pointyEnd, startY + curveHeight / 2 + 1)\n      ctx.lineTo(startX + 3, startY + curveHeight + 1)\n      ctx.stroke()\n    }\n    {\n      const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT\n      ctx.clearRect(\n        startX,\n        startY,\n        2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n        curveHeight\n      )\n      const pointyEnd = right ? (startX + curveHeight * 0.75) : (startX - curveHeight * 0.75)\n\n      ctx.beginPath()\n      ctx.moveTo(startX + 3, startY)\n      ctx.lineTo(pointyEnd, startY + curveHeight / 2 + 1)\n      ctx.stroke()\n  \n      ctx.beginPath()\n      ctx.moveTo(pointyEnd, startY + curveHeight / 2 + 1)\n      ctx.lineTo(startX + 3, startY + curveHeight + 1)\n      ctx.stroke()\n    }\n  }\n\n  static z(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.verticalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const curveHeight = DrawerUtils.GRAPH_CURVE_HEIGHT * 1.75;\n    const startX = baseX - DrawerUtils.GRAPH_STROKE_WIDTH\n    const startY = baseY + DrawerUtils.GRAPH_HALF_HEIGHT - curveHeight + 2\n    ctx.clearRect(\n      startX,\n      startY + 2,\n      2 * DrawerUtils.GRAPH_STROKE_WIDTH,\n      1.5 * curveHeight\n    )\n    ctx.beginPath()\n    ctx.moveTo(startX + 2, startY)\n    ctx.lineTo(startX + curveHeight, startY)\n    ctx.lineTo(startX - curveHeight + 3, startY + 1.5 * curveHeight + 3)\n    ctx.lineTo(startX + 4, startY + 1.5 * curveHeight + 3)\n    ctx.stroke()\n  }\n\n  static a(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedMiddleUpDown(ctx, col + 1, cols, row + 1, width, true)\n  }\n\n  static o(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.roundedMiddleUpDown(ctx, col + 1, cols, row + 1, width, false)\n  }\n\n  static roundedMiddleUpDown(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, upside = true) {\n    DrawerUtils.horizontalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX + DrawerUtils.GRAPH_HALF_WIDTH - DrawerUtils.GRAPH_CURVE_WIDTH / 2\n    const startY = baseY;\n\n    ctx.clearRect(\n      startX,\n      startY - DrawerUtils.GRAPH_STROKE_WIDTH / 2 - 1,\n      DrawerUtils.GRAPH_CURVE_WIDTH,\n      DrawerUtils.GRAPH_STROKE_WIDTH + 1,\n    )\n\n    const curveStartX = startX + 1\n    const curveStartY = upside ? (startY + 1) : (startY - 1)\n    const curveEndX = curveStartX + DrawerUtils.GRAPH_CURVE_WIDTH - 3\n    const curveEndY = curveStartY\n    ctx.beginPath()\n    ctx.moveTo(curveStartX, curveStartY)\n    ctx.bezierCurveTo(\n      curveStartX - 12,\n      curveStartY + (upside ? -18 : 18),\n      curveEndX + 12,\n      curveEndY + (upside ? -21 : 21),\n      curveEndX,\n      curveEndY)\n    ctx.stroke()\n  }\n\n  static \"e!\"(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointYMiddleUpDown(ctx, col + 1, cols, row + 1, width, true)\n  }\n\n  static u(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    DrawerUtils.pointYMiddleUpDown(ctx, col + 1, cols, row + 1, width, false)\n  }\n\n  static pointYMiddleUpDown(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number, upside = true) {\n    DrawerUtils.horizontalBase(ctx, col, cols, row, width)\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX + DrawerUtils.GRAPH_HALF_WIDTH - DrawerUtils.GRAPH_CURVE_WIDTH / 2\n    const startY = baseY;\n\n    ctx.clearRect(\n      startX,\n      startY - DrawerUtils.GRAPH_STROKE_WIDTH / 2 - 1,\n      DrawerUtils.GRAPH_CURVE_WIDTH,\n      DrawerUtils.GRAPH_STROKE_WIDTH + 1,\n    )\n\n    const curveHalfWidth = DrawerUtils.GRAPH_CURVE_WIDTH / 2\n\n    const pointStartX = startX\n    const pointStartY = upside ? (startY + 1) : (startY - 1)\n    const pointMiddleX = pointStartX + curveHalfWidth\n    const pointMiddleY = pointStartY + (upside ? -curveHalfWidth : curveHalfWidth)\n    const pointEndX = pointStartX + DrawerUtils.GRAPH_CURVE_WIDTH\n    const pointEndY = pointStartY\n\n    ctx.beginPath()\n    ctx.moveTo(pointStartX, pointStartY)\n    ctx.lineTo(pointMiddleX, pointMiddleY)\n    ctx.lineTo(pointEndX, pointEndY)\n    ctx.stroke()\n  }\n\n  static e(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    col++;\n    row++;\n    DrawerUtils.horizontalBase(ctx, col, cols, row, width)\n    const curveWidth = DrawerUtils.GRAPH_CURVE_WIDTH\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX + DrawerUtils.GRAPH_HALF_WIDTH - curveWidth\n    const startY = baseY;\n    ctx.clearRect(\n      startX,\n      startY - DrawerUtils.GRAPH_STROKE_WIDTH / 2 - 1,\n      2 * curveWidth - 2,\n      DrawerUtils.GRAPH_STROKE_WIDTH + 1,\n    )\n\n    function curve(upside: boolean, offset: number) {\n      const curveStartX = startX + 1 + offset\n      const curveStartY = upside ? (startY + 1) : (startY - 1)\n      const curveEndX = curveStartX + DrawerUtils.GRAPH_CURVE_WIDTH - 3\n      const curveEndY = curveStartY\n      ctx.moveTo(curveStartX, curveStartY)\n      ctx.bezierCurveTo(\n        curveStartX - 12,\n        curveStartY + (upside ? -18 : 18),\n        curveEndX + 12,\n        curveEndY + (upside ? -21 : 21),\n        curveEndX,\n        curveEndY)\n    }\n    ctx.beginPath()\n    curve(false, 0)\n    curve(true, DrawerUtils.GRAPH_CURVE_WIDTH - 2)\n    ctx.stroke()\n  }\n\n  static i(ctx: CanvasRenderingContext2D, col: number, cols: number, row: number, width: number) {\n    col++;\n    row++;\n    DrawerUtils.horizontalBase(ctx, col, cols, row, width)\n    const curveWidth = DrawerUtils.GRAPH_CURVE_WIDTH\n    const curveHalfWidth = DrawerUtils.GRAPH_CURVE_WIDTH / 2\n    const baseX = width / 2 + ((cols - 2 * col) * DrawerUtils.GRAPH_HALF_WIDTH);\n    const baseY = 2 * row * DrawerUtils.GRAPH_HALF_HEIGHT + DrawerUtils.MARGIN_TOP;\n    const startX = baseX + DrawerUtils.GRAPH_HALF_WIDTH - curveWidth\n    const startY = baseY;\n    ctx.clearRect(\n      startX,\n      startY - DrawerUtils.GRAPH_STROKE_WIDTH / 2 - 1,\n      2 * curveWidth - 2,\n      DrawerUtils.GRAPH_STROKE_WIDTH + 1,\n    )\n    const pointStartX = startX\n    const pointStartY = startY\n    const pointMiddleX = pointStartX + curveHalfWidth\n    const pointMiddleY = pointStartY + curveHalfWidth\n    const pointSecondMiddleX = pointMiddleX + curveWidth\n    const pointSecondMiddleY = pointMiddleY - curveWidth\n    const pointEndX = pointSecondMiddleX + curveHalfWidth\n    const pointEndY = pointStartY\n\n    ctx.beginPath()\n    ctx.moveTo(pointStartX, pointStartY)\n    ctx.lineTo(pointMiddleX, pointMiddleY)\n    ctx.lineTo(pointSecondMiddleX, pointSecondMiddleY)\n    ctx.lineTo(pointEndX, pointEndY)\n    ctx.stroke()\n  }\n}","import { ActionType } from \"../action-type\"\n\nexport enum WorkflowActions {\n  SetTextValue,\n}\n\nexport type SetTextValue = ActionType<WorkflowActions.SetTextValue, string>\n\nexport type AllActions = SetTextValue\n","import './vendor.css';\nimport './App.css';\nimport Layout, { Content, Header } from 'antd/lib/layout/layout';\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCheckSquare,\n  faCoffee,\n  faChalkboard,\n  faNetworkWired,\n  faQuestion,\n  faBook,\n  faExclamation,\n  faKeyboard,\n  faPlus,\n  faCheckCircle,\n  faTimesCircle,\n  faPuzzlePiece,\n} from '@fortawesome/free-solid-svg-icons'\nimport CommonUtils, { DefaultProps, DrawerUtils } from './shared/utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Col, Divider, Row, Form, Input, List } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport setText from './features/workflow/action';\n\nlibrary.add(faCheckSquare,\n  faCoffee,\n  faChalkboard,\n  faNetworkWired,\n  faQuestion,\n  faBook,\n  faExclamation,\n  faKeyboard,\n  faPlus,\n  faCheckCircle,\n  faTimesCircle,\n  faPuzzlePiece,\n)\n\nfunction FormDetails(props: DefaultProps) {\n  const [form] = Form.useForm<{text:string}>();\n\n  useEffect(() => {\n    form.setFieldsValue({\n      text: props.workflows.text\n    })\n  }, [form, props.workflows.text])\n\n  return <Form layout=\"vertical\" form={form} onValuesChange={(_, v) => props.dispatch(setText(v.text))}>\n    <Form.Item label=\"Your text:\" name=\"text\">\n      <Input placeholder=\"input placeholder\" />\n    </Form.Item>\n  </Form>\n}\n\nfunction Canvas(props: DefaultProps) {\n  const ref = useRef<HTMLCanvasElement>(null)\n  useEffect(() => {\n    if (!ref || !ref.current) return;\n    const context = ref.current.getContext(\"2d\")\n    if (!context) return;\n    context.clearRect(0, 0, 600, 600)\n    context.strokeStyle = \"#111120\"\n    const words = CommonUtils.syllableSplitter(props.workflows.text)\n\n    const cols = words.length\n    for(let col = 0; col < cols; col++) {\n      const syllables = words[col]\n      DrawerUtils.horizontalBase(context, col + 1, cols, 0, 600)\n      for(let row = 0; row < syllables.length; row++) {\n        const syllable = syllables[row]\n        const consonant = syllable.slice(0, 1)\n        const verticalDrawer = DrawerUtils.DRAWER[consonant]\n        if (!verticalDrawer) {\n          context.strokeStyle = \"maroon\"\n          DrawerUtils.verticalBase(context, col, cols, row, 600)\n          context.strokeStyle = \"#111120\"\n        } else {\n          verticalDrawer(context, col, cols, row, 600)\n        }\n\n        const vowel = syllable.slice(1)\n        const horizontalDrawer = DrawerUtils.DRAWER[vowel]\n        if (!horizontalDrawer) {\n          DrawerUtils.horizontalBase(context, col + 1, cols, row + 1, 600)\n        } else {\n          horizontalDrawer(context, col, cols, row, 600)\n        }\n      }\n      const previousLength = words[col - 1] && words[col - 1].length\n      const currentLength = words[col].length\n      if (words[col - 1] && (previousLength - currentLength) > 0) {\n        const diff = previousLength - currentLength\n        for(let row = currentLength; row < currentLength + diff; row++) {\n          DrawerUtils.verticalBase(context, col, cols, row, 600)\n        }\n      }\n    }\n\n    const lastRow = words[words.length - 1]\n    for(let row = 0; row < lastRow.length; row++) {\n      DrawerUtils.verticalBase(context, cols, cols, row, 600)\n    }\n  }, [props.workflows.text])\n  return <canvas style={{width:\"100%\", height:\"100%\"}} ref={ref} width=\"600\" height=\"600\" />\n}\n\nclass App extends React.Component<DefaultProps> {\n  canvasRef?: React.Ref<HTMLCanvasElement>;\n\n  render() {\n    \n    const words = CommonUtils.syllableSplitter(this.props.workflows.text)\n    return (\n      <div className=\"App\">\n        <Layout style={{ height: \"100%\" }}>\n          <Header><div className=\"big centered\"><FontAwesomeIcon icon=\"puzzle-piece\" width={20} />\n            <span className=\"brand\">\n              <span className=\"red\">J</span>\n              <span className=\"orange\">i</span>\n              <span className=\"yellow\">g</span>\n              <span className=\"green\">s</span>\n              <span className=\"blue\">a</span>\n              <span className=\"purple\">w</span>\n            </span>\n          Writer | <span className=\"thin\">Write in Jigsaw Script</span></div></Header>\n          <Content className={\"content\"}>\n            <Row>\n              <Col span={12}>\n                <Title level={4}>Fill in your words!</Title>\n                <Divider />\n                <FormDetails {...this.props} />\n                <Divider />\n                <Title level={4}>Your syllables:</Title>\n                <List bordered dataSource={words} renderItem={item => <List.Item className=\"beans\">\n                  {item.map((e, i) => <span className={e.endsWith(\"!\") && !e.endsWith(\"e!\") ? \"error\" : \"\"} key={i}>{e}</span>)}\n                </List.Item>} />\n              </Col>\n              <Col span={12}>\n                <Canvas {...this.props} />\n              </Col>\n            </Row>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default connect(CommonUtils.mapStatesToProps)(App);\n","import { SetTextValue, WorkflowActions } from \"./types\";\n\nexport default function setText(text: string): SetTextValue {\n  return {\n    type: WorkflowActions.SetTextValue,\n    payload: text\n  }\n};\n","import { Reducer } from \"@reduxjs/toolkit\"\nimport { AllActions, WorkflowActions } from \"./types\"\n\nexport type WorkflowState = {\n  text: string\n}\n\nconst initialState: WorkflowState = {\n  text: \"\",\n}\n\nexport const reducer: Reducer<WorkflowState, AllActions> = (state = initialState, action?) => {\n  switch(action?.type) {\n    case WorkflowActions.SetTextValue:\n      return {\n        ...state,\n        text: action.payload\n      }\n    default: return {...state}\n  }\n}\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { reducer as workflowReducer }  from \"../features/workflow/reducer\"\nimport { AllActions } from '../features/workflow/types';\n\nexport const store = configureStore<any, AllActions>({\n  reducer: {\n    workflows: workflowReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}